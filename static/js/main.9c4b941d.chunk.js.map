{"version":3,"sources":["components/navbar/Navbar.jsx","components/text/AnimatedText.jsx","components/text/TextAnimation.jsx","pages/Home/Home.jsx","utils/const.js","components/ProfileList/ProfileCard.jsx","components/profilePopup/ProfilePopup.jsx","pages/SeedlingsList/SeedlingsList.jsx","utils/path.js","App.js","index.js"],"names":["Navbar","props","useDisclosure","isOpen","onOpen","onClose","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","location","useLocation","as","align","justify","wrap","padding","bg","color","pathname","size","fontSize","variant","marginLeft","onClick","icon","mr","w","to","src","background","placeholder","value","searchInput","onChange","children","direction","base","md","display","width","alignItems","flexGrow","mt","_hover","borderColor","Wrapper","className","tagMap","paragraph","heading1","heading2","AnimatedText","item","hidden","y","transition","ease","duration","visible","splitWords","split","words","entries","push","map","word","Tag","type","index","flat","element","style","overflow","motion","span","variants","TextAnimation","useState","replay","div","initial","animate","staggerChildren","key","Home","onClickButton","h","bgGradient","backgroundSize","backgroundPosition","px","useBreakpointValue","height","lineHeight","border","borderRadius","fontWeight","_active","transform","_focus","boxShadow","href","KOALA","process","PROFILE_IMAGE","ProfileCard","name","image","onClickCard","maxW","rounded","CONST","alt","objectFit","p","spacing","mb","fontFamily","ProfilePopup","person","Fragment","photo","isCentered","joiningMonth","role","bio","SeedlingsList","people","filteredResults","minChildWidth","spacingX","spacingY","length","filter","SEEDLIST","App","data","setData","setSearchInput","setFilteredResults","useEffect","a","axios","get","response","searchItems","searchValue","filteredData","Object","values","join","toLowerCase","includes","e","target","list","PATH","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c4b941d.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport {\n  Box,\n  Stack,\n  Input,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n  PopoverCloseButton,\n  Flex,\n  Button,\n  useDisclosure,\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  Img,\n  InputGroup,\n  InputRightAddon,\n} from \"@chakra-ui/react\";\nimport { FaMoon, FaSun, FaSearch } from \"react-icons/fa\";\n\nconst Navbar = (props) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const handleToggle = () => (isOpen ? onClose() : onOpen());\n\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const location = useLocation();\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding={6}\n      bg=\"#AD0F5B\"\n      color=\"white\"\n      {...props}\n    >\n    { location.pathname === '/list' &&\n      <IconButton\n        size=\"md\"\n        fontSize=\"lg\"\n        aria-label={`Switch to ${text} mode`}\n        variant=\"ghost\"\n        color=\"current\"\n        marginLeft=\"2\"\n        onClick={toggleColorMode}\n        icon={<SwitchIcon />}\n        {...props}\n      />\n    }\n      <Flex align=\"center\" mr={5}>\n        <Box w={100}>\n        <Link to=\"/\">\n          <Img src=\"images/Signavio_Logo_Claim_RGB.png\" /> \n        </Link>\n        </Box>\n      </Flex>\n      {location.pathname === \"/list\" ? (\n        <Popover>\n          <PopoverTrigger>\n            <IconButton icon={<FaSearch />} background=\"#AD0F5B\" />\n          </PopoverTrigger>\n          <PopoverContent>\n            <PopoverArrow />\n            <PopoverCloseButton />\n            <InputGroup size=\"sm\">\n              <Input\n                placeholder=\"Search by Name, Location or Month\"\n                value={props.searchInput}\n                onChange={props.onChange}\n                text={text}\n                color={text === \"light\" ? \"white\" : \"black\"}\n              />\n              <InputRightAddon\n                children={<FaSearch />}\n                background=\"#AD0F5B\"\n                onClick={handleToggle}\n              />\n            </InputGroup>\n          </PopoverContent>\n        </Popover>\n      ) : null}\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ base: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n        mt={{ base: 4, md: 0 }}\n      ></Stack>\n\n      <Box\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <Button\n          variant=\"outline\"\n          _hover={{ bg: \"teal.700\", borderColor: \"#AD0F5B\" }}\n        >\n          Seednavio\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\nexport default Navbar;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./TextAnimation.css\";\n\nconst Wrapper = (props) => {\n  return <span className=\"word-wrapper\">{props.children}</span>;\n};\n\nconst tagMap = {\n  paragraph: \"p\",\n  heading1: \"h1\",\n  heading2: \"h2\",\n};\n\nconst AnimatedText = (props) => {\n  const item = {\n    hidden: {\n      y: \"200%\",\n      color: \"#FFFFFF\",\n      transition: { ease: [0.455, 0.03, 0.515, 0.955], duration: 0.85 },\n    },\n    visible: {\n      y: 0,\n      color: \"#FFFFFF\",\n      transition: { ease: [0.455, 0.03, 0.515, 0.955], duration: 0.45 },\n    },\n  };\n\n  const splitWords = props.text.split(\" \");\n\n  const words = [];\n\n  for (const [, item] of splitWords.entries()) {\n    words.push(item.split(\"\"));\n  }\n\n  words.map((word) => {\n    return word.push(\"\\u00A0\");\n  });\n\n  const Tag = tagMap[props.type];\n\n  return (\n    <Tag>\n      {words.map((word, index) => {\n        return (\n          // Wrap each word in the Wrapper component\n          <Wrapper key={index}>\n            {words[index].flat().map((element, index) => {\n              return (\n                <span\n                  style={{\n                    overflow: \"hidden\",\n                    display: \"inline-block\",\n                  }}\n                  key={index}\n                >\n                  <motion.span\n                    style={{ display: \"inline-block\" }}\n                    variants={item}\n                  >\n                    {element}\n                  </motion.span>\n                </span>\n              );\n            })}\n          </Wrapper>\n        );\n      })}\n      {/* {} */}\n    </Tag>\n  );\n};\n\nexport default AnimatedText;\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport AnimatedText from \"./AnimatedText\";\nimport \"./TextAnimation.css\";\n\nexport default function TextAnimation() {\n  const [replay] = useState(true);\n  const placeholderText = [\n\n    { type: \"heading1\", text: \"Welcome to SIGNAVIO\"   },\n    {\n      type: \"heading2\",\n      text: \"Connect with your new team members here\"\n\n    }\n  ];\n\n  const container = {\n    visible: {\n      transition: {\n        staggerChildren: 0.025\n      }\n    }\n  };\n\n\n  return (\n    <motion.div\n      className=\"TextAnimation\"\n      initial=\"hidden\"\n      animate={replay ? \"visible\" : \"hidden\"}\n      variants={container}\n    >\n      <div className=\"container\">\n        {placeholderText.map((item, index) => {\n          return <AnimatedText {...item} key={index} />;\n        })}\n      </div>\n    </motion.div>\n  );\n}\n","import React from \"react\";\nimport { Stack, VStack, Box, Flex, useBreakpointValue } from \"@chakra-ui/react\";\nimport \"./style.css\";\n\nimport TextAnimation from '../../components/text/TextAnimation';\n\n\nfunction Home ({onClickButton}) {\n\n          return (\n\n            <Flex  onClick={ onClickButton} data-testid='homeText'\n                w={'full'}\n                h={'100vh'}\n                bgGradient={[\n                  'linear(to-tr, pink,300, teal.300, green.200)',\n                  'linear(to-t, blue.200, teal.500)',\n                  'linear(to-b, pink.500, purple.300, teal.300)',\n                ]}\n                backgroundSize={'cover'}\n                backgroundPosition={'center center'}>\n\n\n            <VStack\n            w={'full'}\n            justify={'center'}\n            px={useBreakpointValue({ base: 4, md: 8 })}\n            bgGradient={'linear(to-r, blackAlpha.600, transparent)'}>\n              \n              <TextAnimation data-testid='homeText'/>\n              <Stack direction='row' >\n\n              <Box className=\"btn-font\" data-testid='homeButton'\n                as='button'\n                height='50px'\n                width='200px'\n                lineHeight='1.2'\n                transition='all 0.2s cubic-bezier(.08,.52,.52,1)'\n                border='2px'\n                px='8px'\n                borderRadius='15px'\n                fontWeight='semibold'\n                bg='transparent'\n                borderColor='#ccd0d5'\n                color='white'\n                fontSize='16px'\n                _hover={{ bg: '#AD0F5B' }}\n                _active={{\n                  bg: '#dddfe2',\n                  transform: 'scale(0.98)',\n                  borderColor: '#bec3c9',\n                }}\n                _focus={{\n                  boxShadow:\n                    '0 0 1px 2px rgba(88, 144, 255, .75), 0 1px 1px rgba(0, 0, 0, .15)',\n                }}\n              >\n\n                <a href=\"/list\"> VIEW SEEDLINGS</a>\n\n              </Box>\n              </Stack>\n            </VStack>\n        </Flex>\n        );\n}\nexport default Home;\n","const URL = process.env.REACT_APP_SERVER_URL;\n\nexport const SERVER_URL = URL;\n\nconst IMAGE = process.env.PROFILE_IMAGE;\n\nexport const KOALA = IMAGE;\n","import React from \"react\";\nimport \"./ProfileCard.css\";\nimport * as CONST from \"../../utils/const\";\nimport {\n  Heading,\n  Box,\n  Center,\n  Image,\n  Stack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nfunction ProfileCard({ name, image, onClickCard }) {\n  return (\n    <Center onClick={onClickCard} data-testid=\"profileCard\" className=\"cursor-card\"> \n      <Box\n        maxW={\"270px\"}\n        w={\"full\"}\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        boxShadow={\"2xl\"}\n        rounded={\"md\"}\n        overflow={\"hidden\"}\n      >\n        <Image\n          h={\"200px\"}\n          w={\"full\"}\n          src={image || `${CONST.KOALA}`}\n          alt=\"profilePic\"\n          objectFit={\"cover\"}\n        />\n\n        <Box p={2} className=\"card-bg-color\">\n          <Stack spacing={0} align={\"center\"} mb={5}>\n            <Heading fontSize={\"2xl\"} fontWeight={500} fontFamily={\"body\"}>\n              {name}\n            </Heading>\n          </Stack>\n        </Box>\n      </Box>\n    </Center>\n  );\n}\n\nexport default ProfileCard;\n","import React from 'react'\nimport './style.css'\nimport ProfileCard from '../ProfileList/ProfileCard'\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    Avatar,\n    Table,\n    Tbody,\n    Tr,\n    Td,\n  } from '@chakra-ui/react'\n\nconst ProfilePopup = ({ person }) => {\n\n        const { isOpen, onOpen, onClose } = useDisclosure()\n\n        return (\n            (\n            <React.Fragment>\n                <ProfileCard name={person.name} image={person.photo} onClickCard={onOpen} />\n                <Modal isOpen={isOpen} onClose={onClose} isCentered={true} size='xl'>\n                <ModalOverlay />\n                <ModalContent className='modalContent' >\n                <div className=\"avatar-bkg\">\n                  <Avatar className=\"avatar-style\" size='2xl' name={person.name} src={person.photo} />\n                </div>\n                    <ModalHeader className=\"bold-name\">{person.name}</ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody>\n                    <Table >    \n                      <Tbody width=\"100%\">\n                        <Tr>\n                          <Td className=\"bold\">Location:</Td>\n                          <Td>{person.location}</Td>  \n                        </Tr>\n                        <Tr>\n                          <Td className=\"bold\">Join Date: </Td>\n                          <Td>{person.joiningMonth}</Td>\n                        </Tr>\n                        <Tr>\n                          <Td className=\"bold\">Role:</Td>\n                          <Td>{person.role}</Td>\n                        </Tr>\n                        <Tr>\n                          <Td className=\"bold\">Bio:</Td>\n                          <Td>{person.bio}</Td>\n                        </Tr>\n                      </Tbody>                  \n                    </Table>\n                    </ModalBody> \n                \n                </ModalContent>\n                </Modal>\n            </React.Fragment>) \n            )\n}\n\nexport default ProfilePopup;\n","import React from \"react\";\nimport ProfilePopup from \"../../components/profilePopup/ProfilePopup\";\nimport { SimpleGrid, Container } from \"@chakra-ui/react\";\n\nfunction SeedlingsList({ people, searchInput, filteredResults }) {\n  return (\n    <Container maxW=\"container.xl\" className='seedlingsListContainer'>\n      <SimpleGrid minChildWidth=\"250px\" spacingX={5} spacingY={10}>\n        {searchInput.length > 1\n          ? filteredResults.map((filter) => {\n              return (\n                <div key={filter.name}>\n                  <ProfilePopup person={filter} />\n                </div>\n              );\n            })\n          : people.map((person) => {\n              return (\n                <div key={person.name}>\n                  <ProfilePopup person={person} />\n                </div>\n              );\n            })}\n      </SimpleGrid>\n    </Container>\n  );\n}\n\nexport default SeedlingsList;\n","export const HOMEPAGE = \"/\";\nexport const SEEDLIST = \"/list\";\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Home from \"./pages/Home/Home\";\nimport SeedlingsList from \"./pages/SeedlingsList/SeedlingsList\";\nimport { Routes, Route } from \"react-router-dom\";\nimport * as CONST from \"./utils/const\";\nimport * as PATH from \"./utils/path\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  useEffect(async () => {\n    const response = await axios.get(CONST.SERVER_URL);\n    setData(response.data);\n  }, []);\n\n  const searchItems = async (searchValue) => {\n    setSearchInput(searchValue);\n    if (searchInput !== \"\") {\n      const filteredData = data.filter((item) => {\n        return Object.values(item)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(data);\n    }\n  };\n\n  const onChange = (e) => searchItems(e.target.value);\n\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        <Navbar\n          data={data}\n          onChange={onChange}\n          searchInput={searchInput}\n          filteredResults={filteredResults}\n          list={PATH.SEEDLIST}\n        />\n        <Routes>\n          <Route path={PATH.HOMEPAGE} element={<Home />} />\n          <Route\n            path={PATH.SEEDLIST}\n            element={\n              <SeedlingsList\n                people={data}\n                searchInput={searchInput}\n                filteredResults={filteredResults}\n              />\n            }\n          />\n        </Routes>\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}